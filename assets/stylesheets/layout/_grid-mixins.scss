@import "grid-functions";

// Grid initialisation
// -------------------
$grid-gutter:         grid-column-gutter();
$grid-half-gutter:    $grid-gutter / 2;
$grid-column:         grid-column-width();


// Mixins
// ------

// Grid container to set grid bounds
@mixin grid-container($width: $grid-size) {
  @include box-sizing(content-box);
  @include group;
  width: $width;
  margin: {
    left: auto;
    right: auto;
  }
}

// Grid row
// $type: <pixel|fluid>
@mixin grid-row($type: $grid-type) {
  @include group;
  @include grid-column-margins($type, -1);
  clear: both;
}

// Converts into grid column
// $variation - can be normal, last, end, inner or centered
@mixin grid-column($type: $grid-type) {
  @include box-sizing(border-box);
  min-height: 1px;
  float: left;
}

// Column margins
// $modifier: 1   - normal (column) margins
// $modifier: -1  - negative (row) margins
@mixin grid-column-margins($type: $grid-type, $modifier: 1) {
  $v-gutter: 0;

  @if $type == fluid {
    $v-gutter: grid-percentage($grid-half-gutter * $modifier);
  } @else if $type == pixel {
    $v-gutter: $grid-half-gutter * $modifier;
  } @else if $type == center {
    $v-gutter: auto;
  }

  margin-left:  $v-gutter;
  margin-right: $v-gutter;
}

// Calculate single column width (in pixels) multipled by number of columns it spans (indluding gutters)
@mixin grid-column-width($span: 1, $type: $grid-type, $gutter: $grid-gutter, $total-columns: $grid-total-columns) {
  width: grid-columns-width($span, $grid-column, $gutter, $type, $total-columns);
}

// Calculate offset width based on number of columns it spans (including gutters)
@mixin grid-offset-by-column($span: 1, $direction: left, $flow: positive, $grid-type: $grid-type) {
  $v-offset: grid-columns-width($span, $type: $grid-type);
  $v-gutter: $grid-gutter;

  // Fluid grid
  @if $grid-type == fluid {
    $v-gutter: grid-percentage($v-gutter);
  }

  // Negative offset
  @if $flow == negative {
    margin-#{$direction}: -$v-offset - ($v-gutter / 2);
  } @else {
    margin-#{$direction}: $v-offset + ($v-gutter * 1.5);
  }
}
