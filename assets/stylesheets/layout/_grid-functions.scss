// # Calculate column gutter from desired value

// This function will find the nearest round number that
// fits well with number of columns and total width specified

// All parameters are optional (use grid defaults)

@function grid-column-gutter($grid-size: $grid-size, $desired: $grid-desired-gutter) {
  $v-gutter: 0px;
  $column: 1;

  // Find a round gutter width
  @while $column > $v-gutter {
    $column: grid-column-width($grid-size, $grid-total-columns, $v-gutter);

    @if $column % 1 == 0 {
      $range-from:  $desired - 6;
      $range-to:    $desired + 20;
      $within-range: $v-gutter >= $range-from and $v-gutter <= $range-to;
      // Find gutter within desired range
      @if $within-range {
        @return $v-gutter;
      }
    }
    $v-gutter: $v-gutter + 1;
  }
  @warn "Couldn't find suitable gutter close to your desired value. Try a different one.";
}

// # Calcuate the width of a single column
// All parameters are optional (use grid defaults)
@function grid-column-width($grid-size: $grid-size, $total-columns: $grid-total-columns, $gutter: auto) {
  @if $gutter == auto {
    $gutter: grid-column-gutter($grid-size, $grid-desired-gutter);
  }
  @return ($grid-size - (($total-columns - 1) * $gutter)) / $total-columns;
}

// # Calculate the total width of number of columns including gutters
// `$column-width` & `$gutter` are optional (use grid defaults)
@function grid-columns-width($column-span, $column-width: auto, $gutter: auto, $type: $grid-type, $has-row: true) {
  @if $column-width == auto {
    $column-width: grid-column-width();
  }
  @if $gutter == auto {
    $gutter: grid-column-gutter($grid-size, $grid-desired-gutter);
  } @else if $gutter == 0 {
    // Adjust gutter width to exclude two half gutters on each side of grid container
    // TODO simplify this bit and make it more obvious what's going on here (why pixel and fluid affect gutterless column behaviour)
    // 1 is required to remove 1 gutter width from total width due to "rowed" columns adding extra gutter width
    // FIXME This modifiers logic should be reviewed soon. Need to extract the ratios somewhere globally and apply them
    // where they are needed (e.g. grid guides)
    // It only affects m-pixel/m-fluid container modifiers of "rowless" grids
    // e.g. .m-gutterless.m-pixel (on global fluid grid)
    $v-mod: if($grid-type == pixel, 0, 1);
    @if $has-row {
      $v-mod: if($grid-type == pixel, 1, 0);
    }
    $v-gutter-width-adjusted: ($grid-gutter * ($grid-total-columns - $v-mod)) / $grid-total-columns;
    $column-width: $column-width + $v-gutter-width-adjusted;
  }

  $column-width: ceil($column-span * $column-width + ($column-span - 1) * $gutter);

  @if $type == fluid {
    $column-width: grid-percentage($column-width);
  }

  @return $column-width;
}

// # Convert percentage of width relative to the total width
@function grid-percentage($width, $grid-size: ($grid-size + $grid-gutter)) {
  @return percentage($width / $grid-size);
}
